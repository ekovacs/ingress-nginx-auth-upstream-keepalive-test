  server {
    listen       8080;
    server_name  localhost;
    proxy_intercept_errors off;

    location = /hello  {
      
      set $authorization '';
      set $cookie '';
      
      access_by_lua_block {
        local key = os.getenv("SECRET_KEY")
        local api_key = ngx.var.http_api_key
        local authorizationHeader = ngx.var.http_authorization
        
        local aes = require "resty.aes"
        local aes_128_cbc_with_iv = aes:new(key, nil, aes.cipher(128,"cbc"), { iv = "1234567890123456"})
        local actualAuthPayload = aes_128_cbc_with_iv:decrypt(ngx.decode_base64(authorizationHeader))


        local expectedPayload = "{'status': 'authenticated', 'key': '" .. api_key .. "'}"
        if expectedPayload ~= actualAuthPayload then
          ngx.status = 401
          ngx.say("could not verify auth")
          return ngx.exit(401)
        end

        ngx.status = 200
        ngx.say("{'greetings' : '" .. api_key .. "'}")

        return ngx.exit(200)
      }
    }

  }

