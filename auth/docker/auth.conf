  server {
    listen       8080;
    server_name  localhost;
    proxy_intercept_errors off;

    access_log off;

    location = /auth  {
      set $authorization '';
      set $cookie '';
      
      access_by_lua_block {
        local key = os.getenv("SECRET_KEY")
        local api_key = ngx.var.http_api_key
        local api_secret_key = ngx.var.http_api_secret_key

        if api_key ~= 'ingress-nginx' then
          ngx.status = 401
          ngx.say('{"status" : "unauthorized"}')
          return ngx.exit(401)
        end
        
        if api_secret_key ~= 'awesome' then
          ngx.status = 401
          ngx.say('{"status" : "unauthorized"}')
          return ngx.exit(401)
        end

        
        local aes = require "resty.aes"
        local aes_128_cbc_with_iv = aes:new(key, nil, aes.cipher(128, "cbc"), {iv = "1234567890123456"})


        local src = "{'status': 'authenticated', 'key': '" .. api_key .. "'}"
        local digest = aes_128_cbc_with_iv:encrypt(src)
        local authorizationEncoded = ngx.encode_base64(digest)


        ngx.header.authorization = authorizationEncoded
        ngx.header.set_cookie =  'encodedAuth=' .. authorizationEncoded
        ngx.status = 200
        ngx.say('{"status" : "ok"}')

        return ngx.exit(200)
      }
    }

  }

